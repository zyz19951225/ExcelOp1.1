<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.mapper.InfoMapper" >
  <resultMap id="BaseResultMap" type="com.example.demo.model.Info" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="age" property="age" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, age
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from info
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectAll" resultMap="BaseResultMap" resultType="com.example.demo.model.Info" >
    select
    <include refid="Base_Column_List" />
    from info
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.demo.model.Info" >
    insert into info (id, name, age
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertOrupdate" parameterType="com.example.demo.model.Info" >
    insert into info (id, name, age
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}
      )
     ON DUPLICATE KEY UPDATE
     id = values(id),name = values(name),age = values(age)
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.model.Info" >
    insert into info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="age != null" >
        age,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        #{age,jdbcType=INTEGER},
      </if>
    </trim>
    ON DUPLICATE KEY UPDATE
    id = values(id),name = values(name),age = values(age)
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.model.Info" >
    update info
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.model.Info" >
    update info
    set name = #{name,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <!--&lt;!&ndash;savaOrupdate()  更新和保存新数据&ndash;&gt;-->
  <!--<insert id="saveOrupdate" parameterType="java.util.ArrayList">-->
    <!--insert into info (-->
    <!--id, name, age-->
    <!--)-->
    <!--<foreach collection="array" item="info" index="index" separator=",">-->
      <!--values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}-->
    <!--</foreach>-->
    <!--on duplicate key update-->
    <!--col1 = VALUES (col1),-->
    <!--col2 = VALUES (col2),-->
    <!--col3 = VALUES (col3)-->
  <!--</insert>-->


</mapper>